name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: cargo build
        run: cargo build --verbose

  unit-tests:
    name: Unit tests
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Use cargo cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: cargo test
        run: SNELDB_CONFIG='config/test.toml' cargo test -- --test-threads=1

  e2e-tests:
    name: E2E tests
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      RUST_BACKTRACE: "1"
      RUST_LOG: info
      SNELDB_CONFIG: config/dev.toml
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      # Cache cargo build artifacts (best-effort)
      - name: Use cargo cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Prepare runtime dirs
        run: mkdir -p /tmp/sneldb /var/run/sneldb || true

      - name: Build (ensure binaries present on this runner)
        run: cargo build --verbose

      - name: Run E2E test runner
        run: cargo run --bin test_runner

  # Optional: build docs so you can add it as a required check later
  mdbook:
    name: mdBook build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/install-action@v2
        with:
          tool: mdbook
      - name: Build docs
        working-directory: docs
        run: mdbook build
